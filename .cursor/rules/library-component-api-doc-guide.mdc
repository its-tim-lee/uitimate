---
description: 
globs: 
alwaysApply: false
---
# Implementation Steps
Decide the request from user is 1) creating a whole new file or 2) refactoring an existing file

If it's to create a new file:
  1. Create a template by following the instruction "Template Starter" below
  2. Modify the created template by following the instruction "Template modification" below
  3. The template file should be placed as a sibling of the corresponding component

If it's to refactor the existing file:
  1. Use the template from the following instruction "Template Starter" as a desired structure to refactor the corresponding file
  2. Follow the instruction "Template modification" below if it makes sense

Please note the file "ComponentName.meta.tsx" used in below template,
the "ComponentName" should be modified accordingly,
and if such file is not existed, you must create one (you may check the example such as [Heading.meta.tsx](mdc:packages/docs/app/components/ui/Heading/Heading.meta.tsx))

# Template Starter
When asking to create a introduction doc for the correponding component, use below as a starter:
```tsx
import {
  UsageSection,
  DemoApiSection,
  DemoScenariosSection,
  DependenciesSection,
  DemoRecipeSection,
} from "#/components/internal/ApiDoc.tsx";
import VersatileTabs from "#/components/internal/VersatileTabs.tsx";
import ComponentPageUsage from "#/components/internal/ComponentPageUsage.tsx";
import meta from "./ComponentName.meta.tsx";
import ComponentPageHero from "#/components/internal/ComponentPageHero.tsx";

export default () => {
  return (
    <>
      <ComponentPageHero title='API' subtitle={meta.description} />

      <br />

      <UsageSection />
      <ComponentPageUsage
        demoId="the-corresponding-component-demo-file-name-under-the-demo-category"
        anatomy={meta.anatomy}
      />


      <br />

      <DemoApiSection />
      <VersatileTabs
        settings={[
          {
            title: "demo-purpose",
            type: "preview",
            demoId: "demo-file-name",
          },
        ]}
      />
      <br />
      <br />
      
       <DemoScenariosSection />
      <VersatileTabs
        settings={[
          {
            title: "demo-purpose",
            type: "preview",
            demoId: "demo-file-name",
          },
        ]}
      />
      <br />
      <br />      
      <DemoRecipeSection />
      <VersatileTabs
        settings={[
          
        ]}
      />      
      <br />
      <br />

      <DependenciesSection />


      <Link className="tw:link tw:w-fit" to="..." target="_blank" rel="noopener noreferrer">library-package-name</Link>
    </>
  )
}

```

# Template modification
- The file name must be ComponentName.api.tsx
- You may check an example: [Heading.api.tsx](mdc:❔  root/❔  root/🌱  docs/app/components/ui/Heading/Heading.api.tsx)

